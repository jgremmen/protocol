/*
 * Copyright 2022 Jeroen Gremmen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = 'Protocol Library Projects'


allprojects {
  layout.buildDirectory = '.build'

  apply plugin: 'base'

  group = 'de.sayayi.lib'
  version = libs.versions.protocol.get()

  repositories {
    maven {
      url 'https://oss.sonatype.org/content/repositories/snapshots/'
      mavenContent {
        includeGroup 'de.sayayi.lib'
        snapshotsOnly()
      }
    }

    mavenCentral()
  }
}


configure(subprojects.findAll { it.name.startsWith('protocol-') }) {
  apply plugin: 'java-library'
  apply plugin: 'maven-publish'
  apply plugin: 'signing'
  apply plugin: 'jacoco'
  apply plugin: 'idea'


  tasks.withType(JavaCompile).configureEach {
    javaCompiler = javaToolchains.compilerFor {
      languageVersion = JavaLanguageVersion.of(11)
    }

    options.encoding = 'UTF-8'
    options.compilerArgs += [ '--module-path', configurations.compileClasspath.asPath ]
  }


  tasks.withType(Test).configureEach {
    javaLauncher = javaToolchains.launcherFor {
      languageVersion = JavaLanguageVersion.of(11)
    }
  }


  test {
    useJUnitPlatform()
  }


  repositories {
    mavenCentral()
    maven {
      url 'https://artifactory.sayayi.de/artifactory/maven/'
    }
  }


  configurations {
    testAnnotationProcessor.extendsFrom annotationProcessor
    testCompileOnly.extendsFrom compileOnlyApi
  }


  dependencies {
    // java
    compileOnlyApi libs.jetbrains.annotations

    // test
    testAnnotationProcessor libs.lombok

    testCompileOnly libs.lombok

    testImplementation libs.junit.jupiter.api
    testImplementation libs.mockito.core

    testRuntimeOnly libs.junit.jupiter.engine
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  }


  jar.dependsOn test
}


wrapper {
  distributionType = Wrapper.DistributionType.ALL
}
