plugins {
  id 'antlr'
  id "org.sonarqube" version "4.0.0.2929"
  id 'io.franzbecker.gradle-lombok' version '5.0.0'
  id 'de.sayayi.plugin.gradle.libapi' version "1.0-SNAPSHOT"
}


description 'Protocol Library Message Matcher Parser'


lombok {
  version = lombokVersion
  sha256 = ""
}


import io.franzbecker.gradle.lombok.task.DelombokTask

task delombok(type: DelombokTask, dependsOn: compileJava) {
  javaLauncher.set(javaToolchains.launcherFor {
    languageVersion = JavaLanguageVersion.of(8)
  })

  ext.outputDir = file("$buildDir/delombok")
  outputs.dir(outputDir)

  sourceSets.main.java.srcDirs.each {
    inputs.dir(it)
    args(it, "-d", outputDir)
  }

  doFirst {
    outputDir.deleteDir()
  }
}


configurations {
  compile {
    extendsFrom = extendsFrom.findAll { it != configurations.antlr }
  }
}


ext {
  antlrVersion = "4.9.3"
  antlrExtVersion = "0.3.0"
}


apply from: file('../gradle/javadoc.gradle')
apply from: file('../gradle/quality.gradle')
apply from: file('../gradle/publishing.gradle')


dependencies {
  implementation project(':protocol-core')

  implementation("de.sayayi.lib:antlr4-runtime-ext:${antlrExtVersion}") {
    exclude group: 'org.antlr', module: 'antlr4'
  }

  antlr "org.antlr:antlr4:${antlrVersion}"
}


sourcesJar {
  dependsOn generateGrammarSource

  include "**/*.g4"
  include "**/*.java"

  exclude "**/*.tokens"
  exclude "**/*.interp"
  exclude "gen/**"
}


javadoc {
  exclude '**/*.tokens'
  exclude '**/*.interp'
}


clean {
  delete file("src/main/antlr/gen")
  delete file("src/main/gen")
  delete fileTree("src/main/antlr").matching {
    include "**/*.tokens"
  }
}


idea {
  module {
    generatedSourceDirs += generateGrammarSource.outputDirectory
  }
}
