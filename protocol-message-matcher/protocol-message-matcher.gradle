plugins {
  id 'antlr'
  id 'de.sayayi.plugin.gradle.libapi' version '1.0-SNAPSHOT'
}


description 'Protocol Library Message Matcher Parser'


configurations {
  antlr4 {
    visible = false;
  }

  api.setExtendsFrom([])

  compile {
    extendsFrom = extendsFrom.findAll { it != configurations.antlr }
  }
}


ext {
  antlrVersion = '[4.13.0,4.14)'
  antlrExtVersion = '[0.4.1,0.6)'
}


apply from: file('../gradle/javadoc.gradle')
apply from: file('../gradle/quality.gradle')
apply from: file('../gradle/publishing.gradle')


dependencies {
  implementation project(':protocol-core')

  implementation("de.sayayi.lib:antlr4-runtime-ext:${antlrExtVersion}") {
    exclude group: 'org.jetbrains'
    exclude group: 'org.antlr'
  }
  implementation "org.antlr:antlr4-runtime:${antlrVersion}"

  antlr4 "org.antlr:antlr4:${antlrVersion}"
}


generateGrammarSource {
  //noinspection GroovyAccessibility
  antlrClasspath = configurations.antlr4
}


sourcesJar {
  dependsOn generateGrammarSource

  include '**/*.g4'
  include '**/*.java'

  exclude '**/*.tokens'
  exclude '**/*.interp'
  exclude 'gen/**'
}


javadoc {
  exclude '**/*.tokens'
  exclude '**/*.interp'
}


clean {
  delete file("src/main/antlr/gen")
  delete file("src/main/gen")
  delete fileTree("src/main/antlr").matching {
    include "**/*.tokens"
  }
}


idea {
  module {
    generatedSourceDirs += generateGrammarSource.outputDirectory
  }
}
